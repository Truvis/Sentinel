filter {
  if [type] == "firewall" {
    grok {
      match => {"message" => "%{POSINT:[log][syslog][priority]}?(%{INT:[log][syslog][version]}\s*)?(%{SYSLOGTIMESTAMP:[event][created]}|%{TIMESTAMP_ISO8601:[event][created]})\s(%{SYSLOGHOST:[host][name]}\s+)?%{PROG:[process][name]}\s*?(\[)?%{POSINT:[process][pid]}(\]:)?\s*(\-\s*\-)?\s*%{GREEDYDATA:filter_message}|%{POSINT:[log][syslog][priority]}?(%{INT:[log][syslog][version]}\s*)?(%{SYSLOGTIMESTAMP:[event][created]}|%{TIMESTAMP_ISO8601:[event][created]})\s(%{SYSLOGHOST:[host][name]}\s+)?%{PROG:[process][name]}\:\s%{GREEDYDATA:filter_message}"}
      }
    date {
      match => [ "[event][created]", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
      target => "[event][created]"
      }
    mutate {
      add_field => [ "m30w", "debug-14" ]
      copy => { "[event][created]" => "[TimeGenerated]" }
      copy => { "[type]" => "[logtype]"}
    }
  }

  if [process][name] == "filterlog" {
    grok {
      match => { "message" => "[^:]*: %{GREEDYDATA:filterlog_csv}"}
    }

    mutate {
      split => {"filterlog_csv" => "," }
    }

    # [Packetfilter]
    # rulenr, subrulenr, anchorname, label | "0", interface, reason, action, dir, ipversion
    mutate {
      add_field => {
        "[truvis_rulenr]" =>      "%{[filterlog_csv][0]}"
        "[truvis_subrulenr]" =>   "%{[filterlog_csv][1]}"
        "[truvis_anchorname]" =>  "%{[filterlog_csv][2]}"
        "[truvis_label]" =>       "%{[filterlog_csv][3]}"
        "[truvis_interface]" =>   "%{[filterlog_csv][4]}"
        "[truvis_reason]" =>      "%{[filterlog_csv][5]}"
        "[truvis_action]" =>      "%{[filterlog_csv][6]}"
        "[truvis_dir]" =>         "%{[filterlog_csv][7]}"
        "[truvis_ipversion]" =>   "%{[filterlog_csv][8]}"
      }
    }

    # [IPv4]
    # [Packetfilter], tos, ecn, ttl, id, offset, flags, protonum, protoname, length, src, dst
    if [truvis_ipversion] == "4" {
      mutate {
      add_field => {
          "[truvis_tos]" =>  "%{[filterlog_csv][9]}"
          "[truvis_ecn]" =>  "%{[filterlog_csv][10]}"
          "[truvis_ttl]" =>  "%{[filterlog_csv][11]}"
          "[truvis_id]" => "%{[filterlog_csv][12]}"
          "[truvis_offset]" => "%{[filterlog_csv][13]}"
          "[truvis_flags]" =>  "%{[filterlog_csv][14]}"
          "[truvis_protonum]" => "%{[filterlog_csv][15]}"
          "[truvis_protoname]" =>  "%{[filterlog_csv][16]}"
          "[truvis_length]" => "%{[filterlog_csv][17]}"
          "[truvis_sourceip]" => "%{[filterlog_csv][18]}"
          "[truvis_destinationip]" =>  "%{[filterlog_csv][19]}"
        }
      }
      # [TCP]
      # [Packetfilter][IPv4], srcport, dstport, datalen, flags, seq, ack, window, urg, options
      if [truvis_protoname] == "tcp" {
        mutate {
          add_field => {
            "[truvis_srcport]" => "%{[filterlog_csv][20]}"
            "[truvis_dstport]" => "%{[filterlog_csv][21]}"
            "[truvis_datalen]" => "%{[filterlog_csv][22]}"
            "[truvis_flags]" =>   "%{[filterlog_csv][23]}"
            "[truvis_seq]" =>     "%{[filterlog_csv][24]}"
            "[truvis_ack]" =>     "%{[filterlog_csv][25]}"
            "[truvis_window]" =>  "%{[filterlog_csv][26]}"
            "[truvis_urg]" =>     "%{[filterlog_csv][27]}"
            "[truvis_options]" => "%{[filterlog_csv][28]}"
          }
        }
      }
      # [UDP]
      # [Packetfilter][IPv4], srcport, dstport, datalen
      if [truvis_protoname] == "udp" {
        mutate {
          add_field => {
            "[truvis_port_src]" => "%{[filterlog_csv][20]}"
            "[truvis_port_dst]" => "%{[filterlog_csv][21]}"
            "[truvis_datalen]" => "%{[filterlog_csv][22]}"
          }
        }
      }
    }

    # [IPv6]
    # [Packetfilter], tos, ecn, ttl, id, offset, flags, protonum, protoname, length, src, dst
    if [truvis_ipversion] == "6" {
      mutate {
        add_field => {
            "[truvis_class]" =>  "%{[filterlog_csv][9]}"
            "[truvis_flow]" => "%{[filterlog_csv][10]}"
            "[truvis_hoplimit]" => "%{[filterlog_csv][11]}"
            "[truvis_protoname]" =>  "%{[filterlog_csv][12]}"
            "[truvis_protonum]" => "%{[filterlog_csv][13]}"
            "[truvis_length]" => "%{[filterlog_csv][14]}"
            "[truvis_sourceip]" => "%{[filterlog_csv][15]}"
            "[truvis_destinationip]" =>  "%{[filterlog_csv][16]}"
        }
      }
      # [TCP]
      # [Packetfilter][IPv6], srcport, dstport, datalen, flags, seq, ack, window, urg, options
      if [truvis_protoname] == "tcp" {
        mutate {
          add_field => {
            "[truvis_srcport]" => "%{[filterlog_csv][17]}"
            "[truvis_dstport]" => "%{[filterlog_csv][18]}"
            "[truvis_datalen]" => "%{[filterlog_csv][19]}"
            "[truvis_flags]" =>   "%{[filterlog_csv][20]}"
            "[truvis_seq]" =>     "%{[filterlog_csv][21]}"
            "[truvis_ack]" =>     "%{[filterlog_csv][22]}"
            "[truvis_window]" =>  "%{[filterlog_csv][23]}"
            "[truvis_urg]" =>     "%{[filterlog_csv][24]}"
            "[truvis_options]" => "%{[filterlog_csv][25]}"
          }
        }
      }
      # [UDP]
      # [Packetfilter][IPv6], srcport, dstport, datalen
      if [truvis_protoname] == "udp" {
        mutate {
          add_field => {
            "[truvis_port_src]" => "%{[filterlog_csv][17]}"
            "[truvis_port_dst]" => "%{[filterlog_csv][18]}"
            "[truvis_datalen]" => "%{[filterlog_csv][19]}"
          }
        }
      }
    }

    mutate {
      remove_field => [ "filterlog_csv" ]
      remove_field => [ "syslog_message" ]
      remove_field => [ "message" ]
      remove_field => [ "type" ]
    }
  }
}